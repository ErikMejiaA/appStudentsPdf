// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(appStudentsContext))]
    partial class appStudentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Course", b =>
                {
                    b.Property<string>("IdCourse")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumerStudents")
                        .HasColumnType("int");

                    b.HasKey("IdCourse");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Student", b =>
                {
                    b.Property<string>("IdStudent")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdStudent");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Core.Entities.StudentCourse", b =>
                {
                    b.Property<string>("IdCourse")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdStudent")
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdCourse", "IdStudent");

                    b.HasIndex("IdStudent");

                    b.ToTable("StdentsCourses", (string)null);
                });

            modelBuilder.Entity("Core.Entities.StudentCourse", b =>
                {
                    b.HasOne("Core.Entities.Course", "Course")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Student", "Student")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Core.Entities.Course", b =>
                {
                    b.Navigation("StudentsCourses");
                });

            modelBuilder.Entity("Core.Entities.Student", b =>
                {
                    b.Navigation("StudentsCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
